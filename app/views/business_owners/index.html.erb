<p id="notice"><%= notice %></p>

<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="../../favicon.ico">
    <link href="app/assests/stylesheets/main.css" rel="stylesheet" />
    <link href="app/assests/stylesheets/c3.css" rel="stylesheet" />
    <script src="app/assests/javascripts/jquery-3.2.1.slim.min.js"></script>
    <script type="text/javascript" src="app/assests/javascripts/d3.v3.js"></script>
    <script type="text/javascript" src="app/assests/javascripts/c3.js"></script>
    <script type="text/javascript" src="app/assests/javascripts/highcharts.js"></script>
    <script src="app/views/business_owners/data.js"></script>

    <title>Dashboard Template for Bootstrap</title>

    <!-- Bootstrap core CSS -->
    <link href="../../dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
    <link href="../../assets/css/ie10-viewport-bug-workaround.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    

    <!-- Just for debugging purposes. Don't actually copy these 2 lines! -->
    <!--[if lt IE 9]><script src="../../assets/js/ie8-responsive-file-warning.js"></script><![endif]-->
    <script src="../../assets/js/ie-emulation-modes-warning.js"></script>

    <script type="text/javascript">
      //data for dashboard graphs 
      var cData = `Sentence_ID,Review_ID,Date,Category,Sentiment_Score,Sentiment_Label
                    1,1,2/3/2017,Venue,0.90,positive
                    1,1,2/3/2017,Venue,0.80,positive
                    2,2,7/18/2017,Price,0.68,positive
                    3,3,10/31/2017,Food,0.62,positive
                    4,4,2/3/2016,Food,0.00,positive
                    5,5,5/27/2016,Food,0.00,positive
                    6,6,12/3/2016,Food,0.74,positive
                    6,6,12/3/2016,Price,0.74,positive
                    7,7,5/31/2017,Miscellaneous,0.78,positive
                    8,8,7/29/2017,Food,0.85,positive
                    9,9,1/3/2017,Venue,0.88,positive
                    10,10,11/27/2016,Venue,0.00,positive
                    10,10,11/27/2016,Price,0.00,positive
                    11,11,2/3/2015,Venue,0.85,positive
                    12,12,4/3/2015,Miscellaneous,-0.91,negative
                    13,13,11/15/2015,Venue,0.89,positive
                    14,14,9/3/2017,Price,-0.57,negative
                    15,1,2/3/2017,Food,-0.61,negative
                    16,2,7/18/2017,Price,0.00,positive
                    17,3,10/31/2017,Price,0.91,positive
                    17,3,10/31/2017,Food,0.91,positive
                    18,4,2/3/2016,Food,0.98,positive
                    19,5,5/27/2016,Venue,0.00,positive
                    20,6,12/3/2016,Venue,-0.70,negative
                    21,7,5/31/2017,Food,0.76,positive
                    22,8,7/29/2017,Food,0.76,positive
                    23,9,1/3/2017,Food,-0.55,negative
                    24,10,11/27/2016,Service,0.00,positive
                    25,11,2/3/2015,Service,-0.52,negative
                    26,12,4/3/2015,Service,0.84,positive
                    26,12,4/3/2015,Food,0.84,positive`;


        //splitting the date up
        function csvJSON(csv, separator) {
            if (!separator) separator = "\n";
            var lines = csv.split(separator);
            var result = [];
            var headers = lines[0].split(",");
            for (var i = 1; i < lines.length; i++) {
                var obj = {};
                var currentline = lines[i].split(",");
                for (var j = 0; j < headers.length; j++) {
                    obj[String(headers[j]).trim()] = String(currentline[j]).trim();
                }
                result.push(obj);
            }
            //return result; //JavaScript object
            return JSON.stringify(result); //JSON
        }

        //if date file being chosen  
        function handleFiles() {
            var file = document.getElementById("input").files[0];
            if (file) {
                var reader = new FileReader();
                reader.readAsText(file, "UTF-8");
                reader.onload = function (evt) {
                    window.cdata = evt.target.result;
                    loadData();
                }
                reader.onerror = function (evt) {
                    alert("error reading file");
                }
            }

        };

        //rendering graphs
        function render() {
            renderGrid();
            onDocumentReady();
            renderlinechart()
        }

        //setting up the layout of the graphs
        var renderGrid = function () {
            var height = window.innerHeight - 80;
            var width = (window.innerWidth / 2) - 20;
            document.getElementById('power-gauge').style.height = height + 'px';
            document.getElementById('chart').style.height = height + 'px';
            document.getElementById('power-gauge').style.width = width + 'px';
            if (window.innerWidth < 850)
                document.getElementById('chart').style.width = (window.innerWidth - 40)+ 'px';
            else
                document.getElementById('chart').style.width = width + 'px';
        }

        $(document).ready(function () {
            window.sYear = 'All';
            verifyDataExists();
        });

        function verifyDataExists() {
            if (window.data)
                loadData();//first load data
            else {
                if (getcData()) {
                    $('#input').attr('disabled', 'disabled');
                    document.getElementById("input").style.display = 'none';
                    loadData();
                }
            }
        }

        function getcData() {
            try {
                if (cData) {
                    return cData;
                }
            } catch (e) {
                return undefined;
            }
        }

    </script>
    <script>

        //if year options changed 
        function yearChanged() {
            var myselect = document.getElementById("trend");
            var opts = myselect.options;
            var selectedVal = myselect.options[myselect.selectedIndex].value;

            window.sYear = selectedVal;

            $('#power-gauge').empty();
            $('#chart').empty();

            loadData();
        }

        function bindYears(year) {
            var x = document.getElementById("trend");

            for (var i = 0; i < x.options.length; i++) {
                if (year == x.options[i].value) {
                    return;
                }
            }
            var option = document.createElement("option");
            option.text = year;
            option.value = year;
            x.add(option);
        }

        function loadData() {
            try {
                if (getcData())
                    data = JSON.parse(csvJSON(getcData(), "\n"));
                else
                    data = JSON.parse(csvJSON(window.cdata));
            } catch (e) {
                alert('Error while reading data from selected file. Please make sure provide proper CSV file.');
                return;
            }
            

            data.forEach(function (d) {
                d.Date = new Date(d.Date);
            });

            if (window.sYear != 'All') {
                data = data.filter(function (y) { return (y.Date).getFullYear().toString() == window.sYear + ''; });
            }

            data.forEach(function (d) {
                d.Date = __formatxDate(d.Date);
            });

            var months = [];

            for (var i = 0; i < data.length; i++) {
                if (months.indexOf(data[i]['Date']) < 0) {
                    months.push(data[i]['Date']);
                }
            }

            //Prepare line chart data
            var lineChartData = [];
            for (var i = 0; i < months.length; i++) {
                var cMonthData = data.filter(function (m) { return m.Date == months[i]; });
                var cPositive = cMonthData.filter(function (m) { return String(m.Sentiment_Label).toLowerCase() == 'positive'; });
                lineChartData.push({
                    date: new Date('1-' + months[i]),
                    '% Avg Sentiment Score': getAvgScoreCount(cMonthData),
                    '% Positive Score': getPositivePercentage(cPositive, cMonthData),
                    'Total Review Count': cMonthData.length
                });
            }
            window.lineChartData = lineChartData;

            //Prepare gauge chart data.

            //Get for each year
            var years = []
            for (var i = 0; i < months.length; i++) {
                var cy = months[i][months[i].length - 3] + months[i][months[i].length - 2] + months[i][months[i].length - 1];
                if (years.indexOf(cy) < 0) {
                    years.push(cy);
                }
            }

            var cats = [];
            for (var i = 0; i < data.length; i++) {
                if (cats.indexOf(data[i]['Category']) < 0) {
                    cats.push(data[i]['Category']);
                }
            }

            var yearlyCatdata = [];
            if (window.sYear == 'All') {
                for (var i = 0; i < years.length; i++) {
                    var pyear = years[i] + '';
                    if (years[i].includes('-')) {
                        pyear = pyear.replace('-', '20');
                    }
                    bindYears(pyear);
                }
            }

            if (window.sYear == 'All') {
                var perCat = {};
                perCat['Year'] = window.sYear;
                var cYearData = data;
                var cPositive = cYearData.filter(function (m) { return String(m.Sentiment_Label).toLowerCase() == 'positive'; });
                perCat['Total % Positive'] = ((cPositive.length / cYearData.length) * 100).toFixed(2);
                for (var j = 0; j < cats.length; j++) {
                    var cPos = cPositive.filter(function (m) { return m.Category == cats[j]; });
                    var cAll = cYearData.filter(function (m) { return m.Category == cats[j]; });
                    if (cPos.length > 0 && cAll.length > 0) {
                        perCat[cats[j] + ' % Positive'] = ((cPos.length / cAll.length) * 100).toFixed(2);
                    }
                    else {
                        perCat[cats[j] + ' % Positive'] = "0.00";
                    }

                }
                yearlyCatdata.push(perCat);
            }
            else {
                for (var i = 0; i < years.length; i++) {
                    var perCat = {};
                    var pyear = years[i] + '';
                    if (years[i].includes('-')) {
                        pyear = pyear.replace('-', '20');
                    }
                    perCat['Year'] = pyear;
                    var cYearData = data.filter(function (m) { return String(m.Date).includes(years[i]); });
                    var cPositive = cYearData.filter(function (m) { return String(m.Sentiment_Label).toLowerCase() == 'positive'; });
                    perCat['Total % Positive'] = ((cPositive.length / cYearData.length) * 100).toFixed(2);
                    for (var j = 0; j < cats.length; j++) {
                        var cPos = cPositive.filter(function (m) { return m.Category == cats[j]; });
                        var cAll = cYearData.filter(function (m) { return m.Category == cats[j]; });
                        if (cPos.length > 0 && cAll.length > 0) {
                            perCat[cats[j] + ' % Positive'] = ((cPos.length / cAll.length) * 100).toFixed(2);
                        }
                        else {
                            perCat[cats[j] + ' % Positive'] = "0.00";
                        }
                    }
                }

                yearlyCatdata.push(perCat);
            }
            window.gaugeChartData = yearlyCatdata;
            render();
            var lineChart = Number($(($('#chart').find('svg')[0])).attr('width'));
            $(($('#chart').find('svg')[0])).attr('width', (lineChart + 10));

        }

        
        //average sentiment score for reviews 
        function getAvgScoreCount(cMonthData) {
            var totalScore = 0;
            for (var i = 0; i < cMonthData.length; i++) {
                totalScore = totalScore + Math.abs(cMonthData[i]['Sentiment_Score']);   
            }
            totalScore = ((totalScore/ cMonthData.length) * 100).toFixed(2);
            return totalScore;
            
        }

        //percentage of positive reviews
        function getPositivePercentage(cPositive, cMonthData) {
            if (cPositive.length > 0) {
                return Number(((cPositive.length / cMonthData.length) * 100).toFixed(0));
            }
            else
                return 0;
        }

        function getReviewCount(data) {

            var reviews = [];

            for (var i = 0; i < data.length; i++) {
                if (reviews.indexOf(data[0]['Review_ID']) < 0) {
                    reviews.push(data[0]['Review_ID']);
                }
            }
            return reviews;
        }

        function formatDate() {
            var xlbl = $("[style='text-anchor: middle; display: block;']");

            for (var i = 0; i < xlbl.length; i++) {
                var lbl = $(xlbl[i]);
                var slbl = $(lbl.find('tspan'));
                if (slbl) {
                    var sdate = __formatxDate(slbl[0].innerHTML);
                    slbl[0].innerHTML = sdate;
                }
            }
        }

        function formatxToolTip() {
            var tooltip = $('.c3-tooltip-container').find('.c3-tooltip tr th')[0];
            if (tooltip) {
                var sdate = __formatxDate(tooltip.innerHTML);
                tooltip.innerHTML = sdate;
            }
        }

        function __formatxDate(_date) {

            var arr = new Array("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec");
            var dd = new Date(_date);
            var m = dd.getMonth();
            var y = dd.getYear().toString();
            return arr[m] + "-" + y.substr(y.length - 2);
        }

        function renderlinechart() {

            data = window.lineChartData;

            var chart = c3.generate({
                data: {
                    json: data,
                    keys: {
                        x: Object.keys(data[0])[0],
                        value: Object.keys(data[0]).splice(1, Object.keys(data[0]).length)
                    }
                },
                axis: {
                    x: {
                        type: 'timeseries',
                        tick: {
                            format: function (x) {
                                if (x.getDate() === 1) {
                                    return x.toLocaleDateString();
                                }
                            }
                        }
                    }
                }
            });

            setTimeout(formatDate, 100);
        }


    </script>
    <script src="app/assests/javascripts/gauge.js"></script>

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
  </head>

  <body>
    <div id="dashboard">
    <!-- navigation -->
    <nav class="navbar navbar-inverse navbar-fixed-top">
      <div class="container-fluid">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="business_owners">360-Review</a>
        </div>
        <div id="navbar" class="navbar-collapse collapse">
          <ul class="nav navbar-nav navbar-right">
            <li><a href="#">Dashboard</a></li>
            <li><a href="#">Profile</a></li>
          </ul>
        </div>
      </div>
    </nav>

    <div class="container-fluid">
      <div class="row">
        <!-- business owner dashboard logo -->
        <div class="col-sm-12 col-md-12 main">
          <h1 class="page-header">Dashboard</h1>
          <div class="row placeholders">
            <div class="col-md-12 col-sm-12 placeholder">
              <div id="image">
                <h2>Noodlehead</h2><br><br><br>
              <%= image_tag("noodlehead.jpeg", :width => "150", :height => "150") %>
              <div id="summary">
              <h3>Summary Statistics as of <%= Date.today.strftime("%b %d, %Y") %></h3>
              <b>Overall Sentiment Score: <%= @sentence.overallScore %></b>
                <br>
                <b>Total Number of Reviews Analyzed: <%= @review.numReviews %></b>
                <br>
                <b>Total Number of Sentences: <%= @sentence.numSentences %></b>
                <br>
                <b>Total Number of Positive Sentences: <%= @sentence.numPositive %></b>
                <br>
                <b>Total Number of Negative Sentences: <%= @sentence.numNegative %></b>
              </div>
            </div>
          
            <br><br><br>

        <div style="width:100%;border-top:solid 1px #666;margin-bottom: 5px;font-weight: bold;font-size: small;">
        <input type="file" id="input" style="width: 210px;" onchange="handleFiles(this.files)">

        Year(s): <select id="trend" style="margin: 5px;width: 70px;" onchange="yearChanged()">
            <option value="All">All</option>
        </select>
    </div>
    
        <!--style="display: grid;grid-template-columns: repeat(2, 1fr);"-->
        <div id="power-gauge"></div>
        <br>
        <div id="chart"></div>
    
        <br>
        <br>
        <br>
      </div>
    </div>
    <hr>

          <div id="filter">
          <div class="col-sm-3 col-md-3 main">
            <div id="accordion" class="panel panel-primary behclick-panel">
              <div class="panel-heading">
                <h3 class="panel-title">Filter Reviews</h3>
              </div>
              <div class="panel-body" >
                <div class="panel-heading " >
                  <h4 class="panel-title">
                  <a data-toggle="collapse" href="#collapse0">
                    <i class="indicator fa fa-caret-down" aria-hidden="true"></i> Source
                  </a>
                  </h4>
                </div>
          
                <div id="collapse0" class="panel-collapse collapse in" >
                  <ul class="list-group">
                    <li class="list-group-item">
                      <div class="checkbox">
                        <label>
                          <input type="checkbox" value="">
                            Yelp
                        </label>
                      </div>
                    </li>
                    <li class="list-group-item">
                      <div class="checkbox" >
                        <label>
                          <input type="checkbox" value="">
                          Google
                        </label>
                      </div>
                    </li>
                  </ul>
                </div>

                <div class="panel-heading " >
                  <h4 class="panel-title">
                    <a data-toggle="collapse" href="#collapse1">
                      <i class="indicator fa fa-caret-down" aria-hidden="true"></i> Date
                    </a>
                  </h4>
                </div>
                <div id="collapse1" class="panel-collapse collapse in" >
                  <ul class="list-group">
                    <li class="list-group-item">
                      <div class="checkbox">
                        <label>
                          <input type="checkbox" value="">
                          Last Month
                        </label>
                      </div>
                    </li>
                    <li class="list-group-item">
                      <div class="checkbox" >
                        <label>
                          <input type="checkbox" value="">
                          Last Year
                        </label>
                      </div>
                    </li>
                    <li class="list-group-item">
                      <div class="checkbox">
                        <label>
                          <input type="checkbox" value="">
                          Last 5 Years
                        </label>
                      </div>
                    </li>
                    <li class="list-group-item">
                      <div class="checkbox"  >
                        <label>
                          <input type="checkbox" value="">
                          All
                        </label>
                      </div>
                    </li>
                 </ul>
              </div>

              <div class="panel-heading " >
                  <h4 class="panel-title">
                    <a data-toggle="collapse" href="#collapse1">
                      <i class="indicator fa fa-caret-down" aria-hidden="true"></i> Category
                    </a>
                  </h4>
                </div>
                <div id="collapse1" class="panel-collapse collapse in" >
                  <ul class="list-group">
                    <li class="list-group-item">
                      <div class="checkbox">
                        <label>
                          <input type="checkbox" value="">
                          Food
                        </label>
                      </div>
                    </li>
                    <li class="list-group-item">
                      <div class="checkbox" >
                        <label>
                          <input type="checkbox" value="">
                          Service
                        </label>
                      </div>
                    </li>
                    <li class="list-group-item">
                      <div class="checkbox">
                        <label>
                          <input type="checkbox" value="">
                          Price
                        </label>
                      </div>
                    </li>
                    <li class="list-group-item">
                      <div class="checkbox"  >
                        <label>
                          <input type="checkbox" value="">
                          Venue
                        </label>
                      </div>
                    </li>
                 </ul>
              </div>

            </div>
          </li>
        </ul>
      </div>
    </div>
  </div>


          <!-- positive reviews section-->
          <div id="positive">
          <div class="col-sm-4 col-md-4 main">
          <h2 class="sub-header">Positive</h2>
                      
                      <% @positive.each do |sentiment| %>
                      <a href="#"><div class="panel panel-default">
                      <div class="panel-body">
                      <%= sentiment.sentence_content %>
                      <%= '(' +(((((sentiment.sentiment_score + 1)/2)*100)*100).round/100).to_s + '%'+')' %>
                      <br>
                      <%= sentiment.review.date.strftime("%b %d, %Y")%>
                      <br>
                      <%= sentiment.review.rating.to_s + ' stars' %>

                    </div></a>
                  </div>
                  <% end %>
          </div>
        </div>

          <!-- negative reviews section-->
          <div id="negative">
          <div class="col-sm-4 col-md-4 main">
          <h2 class="sub-header">Negative</h2>
                      
                      <% @negative.each do |sentiment| %>
                      
                        <a href="#"><div class="panel panel-default">
                        <div class="panel-body">
                        <%= sentiment.sentence_content %>
                        <%= '(-'+(((((sentiment.sentiment_score.abs + 1)/2)*100)*100).round/100).to_s + '%' + ')' %>
                        <br>
                        <%= sentiment.review.date.strftime("%b %d, %Y")%>
                        <br>
                        <%= sentiment.review.rating.to_s + ' stars' %>
                      
                    </div></a>
                  </div>
                 <% end %>
          </div>
        </div>

        

          <!-- filter panel, based off of bootsnip -->
          <!--https://bootsnipp.com/snippets/MRQDW -->
          
</div>
</div>

  
    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery.min.js"><\/script>')</script>
    <script src="../../dist/js/bootstrap.min.js"></script>
    <!-- Just to make our placeholder images work. Don't actually copy the next line! -->
    <script src="../../assets/js/vendor/holder.min.js"></script>
    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
    <script src="../../assets/js/ie10-viewport-bug-workaround.js"></script>  
  </body>
</html>

